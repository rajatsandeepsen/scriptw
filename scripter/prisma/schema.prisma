generator client {
  provider = "prisma-client-js"
  // previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
  // referentialIntegrity = "prisma"
}

model User {
  id        String       @id @default(uuid())
  name      String       @unique
  createdAt DateTime     @default(now())
  files     FileHeader[]
}

model FileHeader {
  auther      User     @relation(fields: [autherId], references: [id])
  autherId    String
  id          String   @id @default(uuid())
  name        String
  title       String?
  description String?
  json        Json?
  visibility  Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  cells       Cell[]
  // webcells    WebCell[]

  // auther      User     @relation(fields: [autherId], references: [id]) @ignore
}

model Cell {
  id        String     @id @default(uuid())
  fileId    String
  file      FileHeader @relation(fields: [fileId], references: [id])
  type      typeEnum
  runs      Int        @default(0)
  init      String?    @db.Text
  output    String?    @db.Text
  createdAt DateTime   @default(now())

  // file FileHeader @relation(fields: [fileId], references: [id]) @ignore
}

// model WebCell {
//   id     String     @id @default(uuid())
//   fileId String
//   file   FileHeader @relation(fields: [fileId], references: [id])
//   type   typeEnum
//   html   String?
//   css    String?
//   js     String?
//   output String?
// }

// type Code = WebBuilder | Markdown | Javascript

enum typeEnum {
  cell
  markdown
}
